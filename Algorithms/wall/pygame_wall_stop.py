import math
import pygame
import os
import time

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏–º—É–ª—è—Ü–∏–∏
STEP_SIZE = 0.4
STEP_DELAY = 0.2
MAX_DISTANCE = 5.0
COLLISION_THRESHOLD = 0.4
VOLUME_SMOOTHING = 0.1

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame
pygame.init()
pygame.mixer.init()

sound_file_path = 'enhanced_wall.wav'
if not os.path.exists(sound_file_path):
    print(f"Error: The sound file '{sound_file_path}' does not exist!")
    exit()

try:
    sound = pygame.mixer.Sound(sound_file_path)
except pygame.error as e:
    print(f"Error loading sound: {e}")
    exit()

class Person:
    def __init__(self, x, y, orientation_deg):
        self.x = x
        self.y = y
        self.orientation = math.radians(orientation_deg)
        self.last_volume = 0.0

    def move_forward(self):
        self.x += STEP_SIZE * math.cos(self.orientation)
        self.y += STEP_SIZE * math.sin(self.orientation)

class Obstacle:
    def __init__(self, x, y):
        self.x = x
        self.y = y

def calculate_distance(person, obstacle):
    dx = obstacle.x - person.x
    dy = obstacle.y - person.y
    return math.hypot(dx, dy)

def update_volume(person, distance):
    if distance > MAX_DISTANCE:
        target_volume = 0.0
    else:
        target_volume = max(0.0, 1.0 - distance / MAX_DISTANCE)

    # –ü–ª–∞–≤–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    volume = person.last_volume + (target_volume - person.last_volume) * VOLUME_SMOOTHING
    person.last_volume = volume
    sound.set_volume(volume)

def simulate_collision(person, obstacle, steps=100):
    print("‚ñ∂ –°—Ç–∞—Ä—Ç —Å–∏–º—É–ª—è—Ü–∏–∏")
    sound.play(-1)  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª

    for step in range(steps):
        print(f"\n–®–∞–≥ {step + 1}")
        distance = calculate_distance(person, obstacle)
        print(f"–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ–±—ä–µ–∫—Ç–∞: {distance:.2f}")

        if distance <= COLLISION_THRESHOLD:
            print("‚ö† –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ! –ó–≤—É–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∏–≥—Ä–∞—Ç—å –Ω–∞ 100% –≥—Ä–æ–º–∫–æ—Å—Ç–∏.")
            sound.set_volume(1.0)  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å
            while True:
                time.sleep(1)  # –ñ–¥—ë–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É
            break

        person.move_forward()
        update_volume(person, distance)
        time.sleep(STEP_DELAY)

    # –≠—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏
    sound.stop()
    print("üü¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ")

# –ü—Ä–∏–º–µ—Ä
person = Person(0, 2, 0)  # –ò–¥—ë—Ç –ø—Ä—è–º–æ
obstacle = Obstacle(5, 2)  # –°—Ç–µ–Ω–∞ –ø—Ä—è–º–æ –ø–æ –∫—É—Ä—Å—É

simulate_collision(person, obstacle)