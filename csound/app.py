import ctcsound
import os
import math
import time

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–≤—É–∫–∞ ====
wav_path = "myfile.wav"
if not os.path.isfile(wav_path):
    raise FileNotFoundError(f"–§–∞–π–ª {wav_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")

# ==== –°–∏–º—É–ª—è—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è ====
class Person:
    def __init__(self, x, y, orientation):
        self.x = x
        self.y = y
        self.orientation = math.radians(orientation)

class Obstacle:
    def __init__(self, x, y):
        self.x = x
        self.y = y

# ==== Csound –∫–æ–¥ —Å —É–ø—Ä–∞–≤–ª—è—é—â–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏ ====
csd_text = f'''
<CsoundSynthesizer>
<CsOptions>
-odac
-d
</CsOptions>

<CsInstruments>
sr = 44100
ksmps = 32
nchnls = 2
0dbfs = 1

instr 1
    kpan chnget "pan"
    kgain chnget "gain"
    a1 diskin2 "{wav_path}", 1, 0, 1
    a1 = a1 * kgain
    aL, aR pan2 a1, kpan
    outs aL, aR
endin
</CsInstruments>

<CsScore>
i 1 0 -1
</CsScore>
</CsoundSynthesizer>
'''

# ==== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Csound ====
cs = ctcsound.Csound()
cs.setOption("-odac")
cs.compileCsdText(csd_text)
cs.start()

# ==== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π ====
cs.setControlChannel("pan", 0.0)
cs.setControlChannel("gain", 0.1)

# ==== –°–∏–º—É–ª—è—Ü–∏—è —à–∞–≥–æ–≤ ====
def simulate_walking(person, obstacle, steps=50, step_size=0.3):
    for step in range(steps):
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
        person.x += step_size * math.cos(person.orientation)
        person.y += step_size * math.sin(person.orientation)

        # –†–∞—Å—á—ë—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –∏ —É–≥–ª–∞
        dx = obstacle.x - person.x
        dy = obstacle.y - person.y
        distance = math.sqrt(dx**2 + dy**2)
        angle = math.atan2(dy, dx)

        # –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤—É–∫
        pan = max(-1.0, min(1.0, math.sin(angle)))  # -1 = –≤–ª–µ–≤–æ, 1 = –≤–ø—Ä–∞–≤–æ
        gain = max(0.0, min(1.0, 1 / (distance + 0.5)))  # –ß–µ–º –±–ª–∏–∂–µ, —Ç–µ–º –≥—Ä–æ–º—á–µ

        cs.setControlChannel("pan", pan)
        cs.setControlChannel("gain", gain)

        print(f"Step {step+1}: Pos=({person.x:.2f}, {person.y:.2f}) | Distance={distance:.2f} | Pan={pan:.2f} | Gain={gain:.2f}")

        if distance < 0.5:
            print("üí• –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ! –ó–≤—É–∫ –∑–∞—Ü–∏–∫–ª–µ–Ω.")
            # –°–∏–º—É–ª—è—Ü–∏—è –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è: –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–≤—É–∫ –∏–≥—Ä–∞—Ç—å –≤ –æ–¥–Ω–æ–π —Ç–æ—á–∫–µ
            for _ in range(100):  # 100 –∏—Ç–µ—Ä–∞—Ü–∏–π "–≤—Ä–µ–∑–∞–Ω–∏—è"
                cs.setControlChannel("gain", 1.0)
                cs.setControlChannel("pan", pan)
                time.sleep(0.05)
            break

        time.sleep(0.1)

# ==== –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ====
person = Person(0, 0, 0)  # –ò–¥—ë—Ç –≤–ø—Ä–∞–≤–æ
obstacle = Obstacle(3, 0)

simulate_walking(person, obstacle)

# ==== –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ====
cs.stop()
cs.cleanup()
 